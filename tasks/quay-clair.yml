---

- name: Make clair working directory
  file:
    path: "/etc/clairv4/config"
    state: directory

- name: Deploy clair config
  template:
    src: templates/clairv4-config.j2
    dest: "/etc/clairv4/config/config.yaml"

#- name: Copy the quay certificate into clair
#  copy:
#    remote_src: true
#    src: "{{ QUAY_ROOT_DIR }}/config/ssl.cert"
#    dest: "{{ QUAY_ROOT_DIR }}/clair/clair.crt"
#  when: CLAIR_ENCRYPT

#- name: Copy the quay key into clair
#  copy:
#    remote_src: true
#    src: "{{ QUAY_ROOT_DIR }}/config/ssl.key"
#    dest: "{{ QUAY_ROOT_DIR }}/clair/clair.key"
#  when: CLAIR_ENCRYPT

#- name: "Check that ca certificate exists on quay host at {{ QUAY_ROOT_DIR }}/config/extra_ca_certs/ca.crt"
#  stat:
#    path: "{{ QUAY_ROOT_DIR }}/config/extra_ca_certs/ca.crt"
#  register: _ca_cert_exist

#- name: Fail if CA certificate doesn't exist
#  fail:
#    msg: "CA certificate not on host at {{ QUAY_ROOT_DIR }}/config/extra_ca_certs/ca.crt"
#  when: not _ca_cert_exist.stat.isreg

# - name: Create docker systemd path (https://github.com/mhutter/ansible-docker-systemd-service)

# Launch docker command
# docker run -d --name clair --restart unless-stopped -p 6000:6000 -p 6060:6060 -p 6061:6061 -v "{{ QUAY_ROOT_DIR }}/clair:/clair/config:Z" -v "{{ QUAY_ROOT_DIR }}/config/extra_ca_certs/ca.crt:/etc/pki/ca-trust/source/anchors/ca.crt:Z,ro" quay.io/redhat/clair-jwt:v3.1.3

- name: Create clair database
  command: >
    podman exec -it postgresql-quay /bin/bash -c 'echo "CREATE DATABASE clair" | psql -U postgres'

- name: Grant privileges on clair database to quay user
  command: >
    podman exec -it postgresql-quay /bin/bash -c 'echo "GRANT ALL PRIVILEGES ON DATABASE clair TO quayuser" | psql -U postgres'

- name: Enable uuid-ossp
  command: >
    podman exec -it postgresql-quay /bin/bash -c 'echo "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"" | psql -d clair -U postgres'

- name: Start clair container
  containers.podman.podman_container:
    name: clairv4
    image: registry.redhat.io/quay/clair-rhel8:v3.5.1
    state: started
    restart: true
    restart_policy: "always"
    sysctl:
      net.core.somaxconn: 4096
    env:
      CLAIR_CONF: '/clair/config.yaml'
      CLAIR_MODE: 'combo'
    ports:
      - "8080:8080"
      - "8089:8089"
    volume:
      - "/etc/clairv4/config:/clair"

#  docker_container:
#    detach: true
#    restart: true
#    name: "clair"
#    published_ports:
#      - "6000:6000"
#      - "6060:6060"
#      - "6061:6061"
#    image: "quay.io/redhat/clair-jwt:v3.1.3"
#    volumes:
#      - "{{ QUAY_ROOT_DIR }}/clair:/clair/config:Z"
#      - "{{ QUAY_ROOT_DIR }}/config/extra_ca_certs/ca.crt:/etc/pki/ca-trust/source/anchors/ca.crt:Z,ro"
#  when: QUAY_CLAIR_HTTP_PROXY is not defined and QUAY_CLAIR_HTTPS_PROXY is not defined
#  tags:
#    - postgres

#- name: Start clair container
#  docker_container:
#    detach: true
#    restart: true
#    name: "clair"
#    env:
#      HTTP_PROXY: "{{ QUAY_CLAIR_HTTP_PROXY }}"
#      HTTPS_PROXY: "{{ QUAY_CLAIR_HTTPS_PROXY }}"
#      NO_PROXY: "{{ QUAY_CLAIR_HTTP_NO_PROXY }}"
#    published_ports:
#      - "6000:6000"
#      - "6060:6060"
#      - "6061:6061"
#    image: "quay.io/redhat/clair-jwt:v3.1.3"
#    volumes:
#      - "{{ QUAY_ROOT_DIR }}/clair:/clair/config:Z"
#      - "{{ QUAY_ROOT_DIR }}/config/extra_ca_certs/ca.crt:/etc/pki/ca-trust/source/anchors/ca.crt:Z"
#  when: QUAY_CLAIR_HTTP_PROXY is defined or QUAY_CLAIR_HTTPS_PROXY is defined
#  tags:
#    - postgres
